/activities/v1/meetings/{meetingId}/actions/create-task
создание задачи
externalDocs: {
   description: 'Бизнес логика сервиса удаления задачи',
   url: 'https://confluence.sberbank.ru/pages/viewpage.action?pageId=5224439502'
}

#/components/schemas/TasksCreateRq
"параметры создания задачи"
additionalProperties: false
required: (2) ['typeCode', 'organizationId']
type: "object"
properties: {
   organizationId: {$ref: '#/components/schemas/OrganizationIdProp'}
   productCodes: {
      description: "Коды продуктов"
      items: {$ref: '#/components/schemas/ProductCodeProp'}
      maxItems: 50
      type: "array"
   }
   productGroupIds:
     description: "Коды групп продуктов"
     items: {$ref: '#/components/schemas/ProductGroupIdProp'}
     maxItems: 50
     type: "array"
   }
   typeCode: {$ref: '#/components/schemas/TaskTypeCodeProp'}

PROPERTIES:
OrganizationIdProp:
  description: "Уникальный идентификатор Организации"
  maxLength: 50
  pattern: "^[0-9]+$"
  type: "string"
ProductCodeProp:
  description: "Код продукта"
  example: "1-YUI84ER"
  maxLength: 50
  pattern: "^.*$"
  type: "string"
ProductGroupIdProp:
  description: "Код группы продуктов"
  example: "1-YUI854"
  maxLength: 50
  pattern: "^.*$"
  type: "string"
TaskTypeCodeProp:
  description: "Код типа задач"
  example: "1-YUI84"
  maxLength: 50
  pattern: "^.*$"
  type: "string"

#/components/schemas/TasksCreateRs
Успешно
TasksCreateRs:
  additionalProperties: false
  allOf: [{$ref: '#/components/schemas/UniversalRs'}]
  description: "Объект ответа создания задачи"
  properties: {data: {$ref: '#/components/schemas/Meeting'}}
  type: "object"

UniversalRs:
    additionalProperties: false
    description: "Объект ответа"
    properties:
      error: {$ref: '#/components/schemas/Error'}
      messages:
        description: "Массив оповещений"
        items: $ref: "#/components/schemas/Message"
        maxItems: 20
        type: "array"
    success: {type: 'boolean', description: 'Признак успешности запроса'}
    required: ['success']
    type: "object"

Meeting:
  additionalProperties: false
  allOf: [{$ref: '#/components/schemas/MeetingBase'}]
  description: "Сущность встреча"
  properties: {
    addressInfo: {$ref: '#/components/schemas/MeetingAddressInfo'}
    channel: {$ref: '#/components/schemas/MeetingChannel'}
    clndrPlanStartDate: {
      description: 'Плановая дата начала по календарю исполнителя',
      type: 'string',
      pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{1,3})?$'}
    comments: {
      description: 'Комментарии к встрече',
      type: 'array',
      maxItems: 50, 
      items: {$ref: '#/components/schemas/MeetingComment'}
    factEndDate: {
      description: 'Фактическая дата завершения встречи',
      type: 'string',
      pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{1,3})?$'}
    factStartDate: {
       description: 'Фактическая дата начала встречи',
       type: 'string',
       pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{1,3})?$'}
    listOfTasks: {
       type: 'array',
       maxItems: 255,
       description: 'Массив карточек детальной информации по задачам',
       items: {$ref: "#/components/schemas/Task"}
    participants: {
      description: 'Участники встречи',
      type: 'array',
      maxItems: 20, 
      items: {$ref: "#/components/schemas/MeetingParticipant"}
    planExact: {$ref: '#/components/schemas/MeetingPlanExactProp'}
    planStartDate: {
      description: 'Плановая дата начала встречи',
      type: 'string', 
      pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{1,3})?$'}
    remeeting: {
      description: 'Признак повторной встречи',
      type: 'boolean'
    }
    representativeId: {$ref: '#/components/schemas/RepresentativeIdProp'}
    resultComment: {$ref: '#/components/schemas/MeetingResultCommentProp'}
    scenario: {$ref: '#/components/schemas/MeetingScenario'}
    source: {$ref: '#/components/schemas/MeetingSource'}
  }
  clndrPlanStartDate:
    description: "Плановая дата начала по календарю исполнителя"
    pattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{1,3})?$"
    type: "string",
  scenario: {$ref: '#/components/schemas/MeetingScenario'}
  required: (4) ['scenario', 'channel', 'remeeting', 'planExact']
  type: "object"

PROPERTIES:
MeetingBase:
  additionalProperties: false
  description: "Базовый набор элементов сущности встреча"
  properties:
    clndrPlanEndDate: {
      description: 'Плановая дата окончания по календарю исполнителя',
      type: 'string'
      pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{1,3})?$'}
    executor: {$ref: '#/components/schemas/EmployeeNumberProp'}
    id: {$ref: '#/components/schemas/MeetingIdProp'}
    organizationId: {$ref: '#/components/schemas/OrganizationIdProp'}
    planEndDate: {description: 'Плановая дата окончания встречи', type: 'string', 
    pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(.[0-9]{1,3})?$'}
    priority: {$ref: '#/components/schemas/MeetingPriority'}
    result: {$ref: '#/components/schemas/MeetingResult'}
    status: {$ref: '#/components/schemas/MeetingStatus'}
    statusState: {$ref: '#/components/schemas/MeetingStatusState'}
  required: (5) ['id', 'executor', 'organizationId', 'statusState', 'status']
  type: "object"
MeetingAddressInfo:
  additionalProperties: false
  description: "Информация об адресе встречи"
  properties:
    locationFact: {
      description: 'Фактический адрес встречи'
      type: 'string', 
      maxLength: 255,
      pattern: '^.*$'}
    locationFactLatitude: {
      description: 'Широта фактического адреса встречи',
      type: 'string',
      maxLength: 50,
      pattern: '^.*$'}
    locationFactLongitude: {
      description: 'Долгота фактического адреса встречи',
      type: 'string',
      maxLength: 50,
      pattern: '^.*$'}
    locationFactType: {
      description: 'Тип фактического адреса встречи',
      type: 'string',
      maxLength: 50,
      pattern: '^.*$'}
    locationPlan: {$ref: '#/components/schemas/MeetingLocationPlanProp'}
    locationPlanLatitude: $ref:#/components/schemas/MeetingLocationPlanLatitudeProp
    locationPlanLongitude: ef:#/components/schemas/MeetingLocationPlanLongitudeProp
    locationPlanType: {$ref: '#/components/schemas/MeetingLocationPlanTypeProp'}
  required: ['locationPlanType']
  type: "object"

PROPERTIES OF PROPERTIES:
EmployeeNumberProp:
  description: "Табельный номер сотрудника"
  maxLength: 20
  pattern: "^[0-9]+$"
  type: "string"
MeetingIdProp:
  description: "Уникальный идентификатор встречи"
  maxLength: 32
  pattern: "^.*$"
  type: "string"
OrganizationIdProp:
  description: "Уникальный идентификатор Организации"
  maxLength: 50
  pattern: "^[0-9]+$"
  type: "string"
MeetingPriority:
  additionalProperties: false
  description: "Приоритет встречи/ задачи"
  properties:
    code: {
      description: 'Код приоритета',
      type: 'string',
      maxLength: 50,
      pattern: '^.*$'}
  name: {
    description: 'Наименование приоритета',
    type: 'string',
    maxLength: 50,
    pattern: '^.*$'}
  required: (2) ['code', 'name']
  type: "object"
MeetingResult
  additionalProperties: false
  description: "Результат отработки активности/ задачи"
  properties:
    code: {description: 'Код результата', type: 'string', maxLength: 50, pattern: '^.*$'}
  name: {description: 'Наименование результата', type: 'string', maxLength: 50, 
  pattern: '^.*$'}
  required: (2) ['code', 'name']
  type: "object"
MeetingStatus:
  additionalProperties: false
  description: "Статус встречи"
  properties:
    code: {$ref: '#/components/schemas/MeetingStatusCodeProp'}
    name: {
      description: 'Наименование статуса встречи',
      type: 'string',
      maxLength: 50,
      pattern: '^.*$'}
  required: (2) ['code', 'name']
  type: "object"

PROPERTIES OF PROPERTIES OF PROPERTIES
MeetingStatusCodeProp:
  description: "Код статуса встречи"
  maxLength: 50
  pattern: "^.*$"
  type: "string"

#/components/parameters/meetingIdParam
meetingIdParam:
  description: "Уникальный идентификатор Встречи"
  example: "1-GHB78-HL"
  in: "path"
  name: "meetingId"
  required: true
  schema:
    description: "описание типа"
    maxLength: 32
    pattern: "^.*$"
    type: "string"





[
    {
        name: '',
        children: [
            {
                name: '',
                children: [
                    {
                        name: '',
                        children: [],
                    }
                ],
            },
            {
                name: '',
                children: [
                    {
                        name: '',
                        children: [],
                    },
                    {
                        name: '',
                        children: [
                            {
                                name: '',
                                children: [],
                            }
                        ],
                    },
                    {
                        name: '',
                        children: [],
                    },
                ],
            },
            {
                name: '',
                children: [
                    {
                        name: '',
                        children: [],
                    }
                ],
            }
        ],
    }
]